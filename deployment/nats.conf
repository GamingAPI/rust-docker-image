server_name = "nats"
listen = 4222

# RUST_SERVER_PERMISSIONS: {
#   publish: ["v0.rust.servers.>"],
#   # Not allowed to subscribe to anything, as all it can do it rely events
#   subscribe: ["_INBOX.>"],
#   allow_responses: true
# }

# RUST_SERVER_CONSUMER_PERMISSIONS: {
#   # Not allowed to publish anything, as its not a game server
#   publish: ["$JS.API.>"],
#   subscribe: ["v0.rust.servers.>", "_INBOX.>"],
#   allow_responses: true
# }

# ADMIN_PERMISSIONS: {
#   subscribe: ">",
#   publish: ">"
#   allow_responses: true
# }

jetstream {
  store_dir = "/data/gamingapi"
}
#operator: /data/jwt/gamingapi_operator/gamingapi_operator.jwt
# Operator named gamingapi
operator: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJSVUpNTDJJWllBVEVTVUVaM1RJTFFCN0c0U1Y1Wkc2WllTU0dYTEw3RFM0QVNVN1VCSjZBIiwiaWF0IjoxNjczMTU2NDIwLCJpc3MiOiJPQlVVS1BIUkhRSTZFWkVBTFRGRDIyRUo3UjVQNlFDSzJDTU9CN0VYTUFSM0tYVzNWVUhaUkNLUyIsIm5hbWUiOiJnYW1pbmdhcGkiLCJzdWIiOiJPQlVVS1BIUkhRSTZFWkVBTFRGRDIyRUo3UjVQNlFDSzJDTU9CN0VYTUFSM0tYVzNWVUhaUkNLUyIsIm5hdHMiOnsib3BlcmF0b3Jfc2VydmljZV91cmxzIjpbIm5hdHM6Ly9sb2NhbGhvc3Q6NDIyMiJdLCJzeXN0ZW1fYWNjb3VudCI6IkFDTEw2T1Y0QUpYV0xETUJKTU01NFNRNkFLWkpGWkNXS01KU1ZSUlNSQ0JWUVNaNVJVV1daNklPIiwidHlwZSI6Im9wZXJhdG9yIiwidmVyc2lvbiI6Mn19.opro6WWBzNl83QRlFdb0RAtZACJ34olc24Nix2L-ez8_7LXajB-RMYpNyaynfYo26ttARYPufQOKllZaXaz4CA
# System Account named SYS
system_account: ACLL6OV4AJXWLDMBJMM54SQ6AKZJFZCWKMJSVRRSRCBVQSZ5RUWWZ6IO

# configuration of the nats based resolver
resolver {
  type: full
  # Directory in which the account jwt will be stored
  dir: './jwt'
  # In order to support jwt deletion, set to true
  # If the resolver type is full delete will rename the jwt.
  # This is to allow manual restoration in case of inadvertent deletion.
  # To restore a jwt, remove the added suffix .delete and restart or send a reload signal.
  # To free up storage you must manually delete files with the suffix .delete.
  allow_delete: false
  # Interval at which a nats-server with a nats based account resolver will compare
  # it's state with one random nats based account resolver in the cluster and if needed,
  # exchange jwt and converge on the same set of jwt.
  interval: "2m"
  # Timeout for lookup requests in case an account does not exist locally.
  timeout: "1.9s"
}

# Preload the nats based resolver with the system account jwt.
# This is not necessary but avoids a bootstrapping system account.
# This only applies to the system account. Therefore other account jwt are not included here.
# To populate the resolver:
# 1) make sure that your operator has the account server URL pointing at your nats servers.
#    The url must start with: "nats://"
#    nsc edit operator --account-jwt-server-url nats://localhost:4222
# 2) push your accounts using: nsc push --all
#    The argument to push -u is optional if your account server url is set as described.
# 3) to prune accounts use: nsc push --prune
#    In order to enable prune you must set above allow_delete to true
# Later changes to the system account take precedence over the system account jwt listed here.
resolver_preload: {
  ACLL6OV4AJXWLDMBJMM54SQ6AKZJFZCWKMJSVRRSRCBVQSZ5RUWWZ6IO: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJKRERVT1ZGSjdHNzdGNVhWQlM0M1hWUzJYVExaUUhLRFAzV1JPS0VIQUQ3V0JVVlhYT0FRIiwiaWF0IjoxNjczMTU2NDIwLCJpc3MiOiJPQlVVS1BIUkhRSTZFWkVBTFRGRDIyRUo3UjVQNlFDSzJDTU9CN0VYTUFSM0tYVzNWVUhaUkNLUyIsIm5hbWUiOiJTWVMiLCJzdWIiOiJBQ0xMNk9WNEFKWFdMRE1CSk1NNTRTUTZBS1pKRlpDV0tNSlNWUlJTUkNCVlFTWjVSVVdXWjZJTyIsIm5hdHMiOnsiZXhwb3J0cyI6W3sibmFtZSI6ImFjY291bnQtbW9uaXRvcmluZy1zdHJlYW1zIiwic3ViamVjdCI6IiRTWVMuQUNDT1VOVC4qLlx1MDAzZSIsInR5cGUiOiJzdHJlYW0iLCJhY2NvdW50X3Rva2VuX3Bvc2l0aW9uIjozLCJkZXNjcmlwdGlvbiI6IkFjY291bnQgc3BlY2lmaWMgbW9uaXRvcmluZyBzdHJlYW0iLCJpbmZvX3VybCI6Imh0dHBzOi8vZG9jcy5uYXRzLmlvL25hdHMtc2VydmVyL2NvbmZpZ3VyYXRpb24vc3lzX2FjY291bnRzIn0seyJuYW1lIjoiYWNjb3VudC1tb25pdG9yaW5nLXNlcnZpY2VzIiwic3ViamVjdCI6IiRTWVMuUkVRLkFDQ09VTlQuKi4qIiwidHlwZSI6InNlcnZpY2UiLCJyZXNwb25zZV90eXBlIjoiU3RyZWFtIiwiYWNjb3VudF90b2tlbl9wb3NpdGlvbiI6NCwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0IGFjY291bnQgc3BlY2lmaWMgbW9uaXRvcmluZyBzZXJ2aWNlcyBmb3I6IFNVQlNaLCBDT05OWiwgTEVBRlosIEpTWiBhbmQgSU5GTyIsImluZm9fdXJsIjoiaHR0cHM6Ly9kb2NzLm5hdHMuaW8vbmF0cy1zZXJ2ZXIvY29uZmlndXJhdGlvbi9zeXNfYWNjb3VudHMifV0sImxpbWl0cyI6eyJzdWJzIjotMSwiZGF0YSI6LTEsInBheWxvYWQiOi0xLCJpbXBvcnRzIjotMSwiZXhwb3J0cyI6LTEsIndpbGRjYXJkcyI6dHJ1ZSwiY29ubiI6LTEsImxlYWYiOi0xfSwic2lnbmluZ19rZXlzIjpbIkFCTEpYSktLRFhRQjNMMzJLQk1NRVBUV1hCUjVHSjVCUElHMkRBVlY0RFRITk1DVVY2UjdFTkVEIl0sImRlZmF1bHRfcGVybWlzc2lvbnMiOnsicHViIjp7fSwic3ViIjp7fX0sImF1dGhvcml6YXRpb24iOnsiYXV0aF91c2VycyI6bnVsbH0sInR5cGUiOiJhY2NvdW50IiwidmVyc2lvbiI6Mn19.egV8QFHvSSBOLD7AJmPEgjRzESElrg-i1lNoDcPjHYEhRuuqxVp1KdzTZCeCjhbPXrBS1AqdDuoQ1r-SZyGZDg,
}

# accounts: {
#   SandboxServer: {
#     jetstream {
#       max_mem: 512M
#       max_file: 1G
#       max_streams: 10
#       max_consumers: 100
#     },
#     users: [
#       { 
#         nkey: UCI2NCSIEV3DXLYYR5KQXYCZ7CIW4KYXHLSGXJOZ7TSRRKHP2BM5IVMU, 
#         permissions: $RUST_SERVER_PERMISSIONS
#       },
#       { 
#         nkey: UA24HKZ3OMUMGDHSR2VGWAH7G5GO7BNERFTLI2BXKF6NY5TWR6KAJDYM, 
#         permissions: $RUST_SERVER_CONSUMER_PERMISSIONS 
#       },
#       { 
#         nkey: UCZEUSMSX2LVJVSMN7MRNUWHTFE7U6U3ZIQ573SCBH2VEPSDHI3KWQB6,
#         permissions: $ADMIN_PERMISSIONS
#       }
#     ]
#   }
# }

#Seed game server: SUAHZGQCK3PKMY5JBY2PBJUK2SA2IAGNX7VXYQJ75MLIU2IWQE235OBLJM
#Seed public client: SUABVM4NEM4N2OVJAO5V2NBMMYFLDU3WT4D7JSMSDAR5TBRWOBQPRM3CY4
#Seed admin: SUAJXDS4THW2BL6A23PVVO47VCRRMINH2C554INVR3ZBBHFMRLDWOOD3JA